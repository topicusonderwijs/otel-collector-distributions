name: "template: Build and Push"

on:
  workflow_call:
    inputs:
      path:
        description: OTel Collector path
        required: true
        type: string
      git_tag_name:
        description: Git tag to build
        required: false
        type: string
      version:
        description: Version
        required: false
        type: string

defaults:
  run:
    shell: bash

jobs:

  build-push:
    runs-on: "ubuntu-latest"
    steps:

      - name: Checkout
        uses: actions/checkout@v5
        with:
            fetch-depth: ${{ github.event_name == 'pull_request' && 1 || 2 }}
            ref: ${{ inputs.git_tag_name || '' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: ${{ inputs.version }}
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Go version
        run: |
          GO_VERSION=$(go mod edit -json | jq -r .Go)
          echo "Detected: $GO_VERSION"
          echo "GO_VERSION=$GO_VERSION" >> $GITHUB_ENV

      - name: Get metadata from manifest
        run: |
          OTEL_NAME=$(yq '.dist.name' ${{ inputs.path }}/manifest.yaml)
          echo "OTEL_NAME=$OTEL_NAME" >> $GITHUB_ENV
          echo "OTEL_IMAGE_NAME=${OTEL_NAME/otelcol/opentelemetry-collector}" >> $GITHUB_ENV
          echo "OTEL_IMAGE_VERSION=$(yq '.dist.version' ${{ inputs.path }}/manifest.yaml)" >> $GITHUB_ENV
          echo "OTEL_DESCRIPTION=$(yq '.dist.description' ${{ inputs.path }}/manifest.yaml)" >> $GITHUB_ENV

      - name: Get Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          context: git
          images: ghcr.io/topicusonderwijs/${{ env.OTEL_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=match,pattern=${{ env.OTEL_NAME }}-v(.*),group=1
          labels: |
            org.opencontainers.image.title=${{ env.OTEL_NAME }}
            org.opencontainers.image.description=${{ env.OTEL_DESCRIPTION }}

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.path }}
          build-contexts: |
            ocb=.
          file: ./Dockerfile
          build-args: |
            GO_VERSION=${{ env.GO_VERSION }}
            OTEL_EXECUTABLE=${{ env.OTEL_NAME }}
          platforms: "linux/arm64,linux/amd64"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ inputs.version && true || false }}
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=${{ env.OTEL_DESCRIPTION }}
